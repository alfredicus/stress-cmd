export declare type Point2D = [number, number];
export declare type Point3D = [number, number, number];
/**
 * Usage:
 * ```ts
 * const p1 = {
 *      p     : [0,0],
 *      angle : deg2rad(10),
 *      circle: '3_1'
 * }
 *
 * const p2 = {
 *      angle : deg2rad(10),
 *      p     : [0,0],
 *      circle: '3_1'
 * }
 * ```
 */
export declare type MohrPoint = {
    p: Point2D;
    angle: number;
    circle: string;
};
/**
 * ```ts
 * const curves = []
 * curves.push( new EquipotentialCurve(), new MohrCoulombCurve(), new MohrCoulombCurve(), new IntegralCurve() )
 * ```
 */
export interface GenericCurve {
    /**
     * Return the generated curve as a GOCAD PLine string, or an empty
     * string if nothing to draw.
     * @param theta
     * @param phi
     */
    generate(theta: number, phi: number): string;
}
