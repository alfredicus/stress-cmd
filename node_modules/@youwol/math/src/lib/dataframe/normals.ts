import {
    Serie,
    createTyped,
    DataFrame,
    Decomposer,
    exists,
} from '@youwol/dataframe'
import { vec } from '../'

export function normals(positions: Serie, indices: Serie): Serie {
    if (!positions || !indices) {
        return undefined
    }

    const data = new Array(indices.count).fill(0)

    let i = 0
    indices.forEach((t) => {
        const v1 = positions.itemAt(t[0]) as vec.Vector3
        const v2 = positions.itemAt(t[1]) as vec.Vector3
        const v3 = positions.itemAt(t[2]) as vec.Vector3
        const n = vec.cross(
            vec.create(v1, v2) as vec.Vector3,
            vec.create(v1, v3) as vec.Vector3,
        )
        data[i++] = n[0]
        data[i++] = n[1]
        data[i++] = n[2]
    })

    return Serie.create({
        array: createTyped(Float32Array, data, true),
        itemSize: 3,
    })
}
