import { Serie, DataFrame, Decomposer } from '@youwol/dataframe';
/**
 * Allows to get components of serie for which itemSize > 1.
 *
 * For instance, for a serie named `U` with `itemSize=2` and `dimension=2`, components names will be
 * `Ux` and `Uy` (2 components).
 *
 * For a serie named `U` with `itemSize=3` and `dimension=3`, components names will be
 * `Ux`, `Uy` and `Uz` (3 components).
 *
 * For a serie named `S` with `itemSize=3` and `dimension=2` (symmetric rank 2 tensor of dim 2), components names will be
 * `Sxx`, `Sxy` and `Syy` (3 components).
 *
 * For a serie named `S` with `itemSize=4` and `dimension=2` (general rank 2 tensor of dim 2), components names will be
 * `Sxx`, `Sxy`, `Syx` and `Syy` (4 components).
 *
 * For a serie named `S` with `itemSize=6` and `dimension=3` (symmetric rank 2 tensor of dim 3), components names will be
 * `Sxx`, `Sxy`, `Sxz`, `Syy`, `Syz` and `Szz` (6 components).
 *
 * For a serie named `S` with `itemSize=9` and `dimension=3` (general rank 2 tensor of dim 3), components names
 * will be `Sxx`, `Sxy`, `Sxz`, `Syx`, `Syy`, `Syz`, `Szx`, `Szy` and `Szz` (9 components).
 *
 * For all other series, index number are appended to the serie's name, starting at zero.
 * That is to say, for a serie named `E` with `itemSize=5`, components names will be
 * `E0`, `E1`, `E2`, `E3` and `E4`.
 * @category Dataframe/decomposers
 */
export declare class ComponentDecomposer implements Decomposer {
    /**
     * @hidden
     */
    names(df: DataFrame, itemSize: number, serie: Serie, name: string): any[];
    /**
     * @hidden
     */
    serie(df: DataFrame, itemSize: number, name: string): Serie;
}
